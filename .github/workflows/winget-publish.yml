name: Publish to Winget

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.6.1)'
        required: true
        type: string
  workflow_call:
    inputs:
      version:
        description: 'Version to publish'
        required: true
        type: string

jobs:
  winget-publish:
    runs-on: windows-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate version format
        shell: pwsh
        run: |
          $version = "${{ inputs.version }}"
          if ($version -notmatch '^\d+\.\d+\.\d+$') {
            Write-Error "Invalid version format: $version. Expected format: x.y.z"
            exit 1
          }

      - name: Check if release exists
        shell: pwsh
        run: |
          $version = "${{ inputs.version }}"
          $releaseUrl = "https://api.github.com/repos/${{ github.repository }}/releases/tags/v$version"

          try {
            $response = Invoke-RestMethod -Uri $releaseUrl -Headers @{ Authorization = "Bearer ${{ secrets.GITHUB_TOKEN }}" }
            Write-Host "‚úÖ Release v$version found"
          } catch {
            Write-Error "‚ùå Release v$version not found. Please create a release first."
            exit 1
          }

      - name: Download and calculate SHA256
        shell: pwsh
        run: |
          $version = "${{ inputs.version }}"
          $installerUrl = "https://github.com/${{ github.repository }}/releases/download/v$version/spotlight-dimmer-installer.exe"
          $installerPath = "spotlight-dimmer-installer.exe"

          Write-Host "Downloading installer from: $installerUrl"
          Invoke-WebRequest -Uri $installerUrl -OutFile $installerPath

          $hash = (Get-FileHash -Path $installerPath -Algorithm SHA256).Hash
          Write-Host "SHA256: $hash"

          # Save for next step
          "INSTALLER_SHA256=$hash" | Out-File -FilePath $Env:GITHUB_ENV -Append
          "INSTALLER_URL=$installerUrl" | Out-File -FilePath $Env:GITHUB_ENV -Append

      - name: Generate Winget manifests
        shell: pwsh
        run: |
          .\.github\scripts\Generate-WingetManifests.ps1 `
            -Version "${{ inputs.version }}" `
            -InstallerUrl "${{ env.INSTALLER_URL }}" `
            -InstallerSha256 "${{ env.INSTALLER_SHA256 }}"

      - name: Upload manifest artifacts
        uses: actions/upload-artifact@v4
        with:
          name: winget-manifests-${{ inputs.version }}
          path: winget-manifests/
          retention-days: 30

      - name: Summary
        shell: pwsh
        run: |
          $version = "${{ inputs.version }}"

          Write-Host "`n========================================="
          Write-Host "‚úÖ Winget manifests generated for v$version"
          Write-Host "=========================================`n"

          Write-Host "üì¶ Artifacts uploaded to GitHub Actions"
          Write-Host "üì• Download the 'winget-manifests-$version' artifact"
          Write-Host "`nüìã Next Steps:"
          Write-Host "  1. Download the manifest artifact from this workflow run"
          Write-Host "  2. Fork microsoft/winget-pkgs repository (if not already)"
          Write-Host "  3. Copy the manifests folder to your fork"
          Write-Host "  4. Create a Pull Request to microsoft/winget-pkgs"
          Write-Host "  5. Wait for automated validation and review"
          Write-Host "`nüîó Links:"
          Write-Host "  - Winget Packages Repo: https://github.com/microsoft/winget-pkgs"
          Write-Host "  - Submission Guide: https://learn.microsoft.com/en-us/windows/package-manager/package/"
          Write-Host "  - Your Artifacts: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
